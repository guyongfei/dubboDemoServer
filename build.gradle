buildscript {
    ext {
        springBootVersion = '1.5.6.RELEASE'
    }
    repositories {
        maven { url "http://maven.aliyun.com/nexus/content/groups/public"}
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}


apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: "war"

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

war {
    archiveName = "dubboservicedemo.war"
}

//bootRun {
//    addResources = true
//}

repositories {
    maven { url "http://maven.aliyun.com/nexus/content/groups/public"}
}

dependencies {
//	spring boot 父节点依赖, 引入这个之后相关的引入就不需要添加version配置，spring boot会自动选择最合适的版本进行添加
    compile('org.springframework.boot:spring-boot-starter-parent:1.3.3.RELEASE')
    compile('org.springframework.boot:spring-boot-starter-web')
    //thymeleaf
//    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    // shiro spring
//    compile('org.apache.shiro:shiro-spring:1.2.4')
    // Spirng data JPA依赖
//    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    // mysql驱动
    compile('mysql:mysql-connector-java')
    // shiro ehcache
//    compile('org.apache.shiro:shiro-ehcache:1.2.2')
//    compile('org.springframework:spring-context-support')
    // devtools可以实现页面热部署（即页面修改后会立即生效，这个可以直接在application.properties文件中配置spring.thymeleaf.cache=false来实现），
//	实现类文件热部署（类文件修改后不会立即生效），实现对属性文件的热部署。
//	即devtools会监听classpath下的文件变动，并且会立即重启应用（发生在保存时机），注意：因为其采用的虚拟机机制，该项重启是很快的
//    compile('org.springframework.boot:spring-boot-devtools')
    //shiro thymeleaf
//    compile('com.github.theborakompanioni:thymeleaf-extras-shiro:1.2.1')

    // dubbo + zookeeper
    compile(group: 'com.alibaba', name: 'dubbo', version: '2.5.3') {
        exclude(module: 'spring')
    }
    compile (group: 'org.apache.zookeeper', name: 'zookeeper', version: '3.4.6'){
        exclude(module: 'slf4j-log4j12')
        exclude(module: 'log4j')
    }
    compile ('com.github.sgroschupf:zkclient:0.1'){
        exclude(module: 'slf4j-log4j12')
        exclude(module: 'log4j')
    }
}
